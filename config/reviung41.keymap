/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h>

&spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <11>; /* arbitrary; change at will */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

#define QW     0
#define DV     1
#define LOW    2
#define UPR    3
#define NAV    4
#define FN     5

#define HM1(k) hm LGUI  k
#define HM2(k) hm LALT  k
#define HM3(k) hm LCTL  k
#define HM4(k) hm LSHFT k
// #define HM1(k) kp k
// #define HM2(k) kp k
// #define HM3(k) kp k
// #define HM4(k) kp k

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOW UPR>;
            then-layer = <FN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// This is a "QWERTY" keymap, but it's really intended to be used in dvorak mode
// (with setxkbmap us -variant dvorak -option compose:ralt).
            bindings = <
&kp TAB   &kp Q       &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O     &kp P      &trans
&kp LCTRL &HM1(A)     &HM2(S)   &HM3(D)   &HM4(F)   &kp G     &kp H     &HM4(J)   &HM3(K)   &HM2(L)   &HM1(SEMI) &trans
&kp LSHFT &kp Z       &kp X     &kp C     &kp V     &kp B     &kp N     &kp M     &kp COMMA &kp DOT   &kp SLASH  &trans

&kp LALT  &mo LOW     &kp SPACE &mo UPR   &mo NAV
            >;
        };

        dvorak_layer {
        // DV - Dvorak layer
            bindings = <
   &kp TAB   &kp SQT  &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G  &kp C &kp R &kp L &trans
   &kp LCTRL &kp A    &kp O     &kp   E &kp U &kp I   &kp D &kp H  &kp T &kp N &kp S &trans
   &kp LSHFT &kp SEMI &kp Q     &kp   J &kp K &kp X   &kp B &kp M  &kp W &kp V &kp Z &trans
                              &kp LALT &mo LOW &kp SPACE &mo UPR &kp NAV
            >;
        };

                lower_layer {
                        bindings = <
&trans    &kp EXCL    &kp AT    &kp HASH  &kp DLLR  &kp PRCNT &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR   &trans
&trans    &kp LGUI    &kp LALT  &kp LCTL  &kp LSHFT &kp BSLH  &kp LBKT  &kp DQT   &kp RBRC  &kp UNDER &kp PLUS   &trans
&trans    &kp GRAVE   &kp TILDE &kp TAB   &kp ESC   &kp PIPE  &kp LBRC  &kp SQT   &kp RBKT  &kp MINUS &kp EQUAL  &trans

&trans      &trans       &trans        &trans       &trans
                        >;
                };

                raise_layer {
                        bindings = <
&trans    &kp N1      &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0     &trans
&trans    &trans      &trans    &trans    &trans    &trans    &kp BSPC  &kp LSHFT &kp LCTL  &kp LALT  &kp LGUI   &trans
&trans    &trans      &trans    &trans    &trans    &trans    &kp RALT  &kp RET   &kp DEL   &trans    &trans     &trans

&trans      &trans       &trans        &trans       &trans
                        >;
                };

                navigation_layer {
                        bindings = <
&trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans     &trans
&trans    &trans      &trans    &trans    &trans    &trans    &trans    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans
&trans    &trans      &trans    &trans    &trans    &trans    &trans    &kp HOME  &kp PG_DN &kp PG_UP &kp END    &trans

&trans      &trans       &trans        &trans       &trans
                        >;
                };

                function_layer {
                        bindings = <
&trans       &kp F1       &kp F2       &kp F3       &kp F4       &kp F5     &kp F6 &kp F7          &kp F8          &kp F9          &kp F10         &trans
&trans       &kp F11      &kp F12      &trans       &to DV       &to QW     &trans &rgb_ug RGB_TOG &trans          &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR &trans &trans          &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD

&trans      &trans       &trans        &trans       &trans
                        >;
                };

//                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
// |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
//                                              |     |     |     |     |     |
//                        bindings = <
//   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
//   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none              &none        &none        &none        &none        &none        &none
//   &none           &none           &none           &none           &none &none              &reset       &none        &none        &none        &none        &none
//                                                             &trans      &trans       &tog 3        &trans      &trans
//                        >;
//                };
//        };
   };
};
